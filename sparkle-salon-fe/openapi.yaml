openapi: 3.1.0
info:
  title: Sparkle Spa API-service
  description: API service
  license:
    name: Api License
    url: http://localhost:8080/swp
  version: v1.0.0
servers:
  - url: http://localhost:8080/swp
    description: Test Server
security:
  - bearerAuth: []
paths:
  /users/{userId}:
    get:
      tags:
        - user-controller
      operationId: getUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUserResponse'
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /users/{userId}/disable:
    put:
      tags:
        - user-controller
      operationId: disable
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /therapist/{id}:
    put:
      tags:
        - therapist-controller
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TherapistUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseTherapistResponse'
    delete:
      tags:
        - therapist-controller
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /therapist/{id}/disable:
    put:
      tags:
        - therapist-controller
      operationId: disable_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /role/{rolename}:
    put:
      tags:
        - role-controller
      operationId: update_2
      parameters:
        - name: rolename
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseRoleResponse'
  /quiz/{quizId}:
    get:
      tags:
        - quiz-controller
      operationId: getQuizById
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuizResponse'
    put:
      tags:
        - quiz-controller
      operationId: updateQuiz
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuizResponse'
    delete:
      tags:
        - quiz-controller
      operationId: deleteQuiz
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /question/{questionId}:
    get:
      tags:
        - question-controller
      operationId: getById
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuestionResponse'
    put:
      tags:
        - question-controller
      operationId: updateQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuestionResponse'
    delete:
      tags:
        - question-controller
      operationId: deleteQuestion
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /answer/{answerId}:
    get:
      tags:
        - answer-controller
      operationId: getById_1
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAnswerResponse'
    put:
      tags:
        - answer-controller
      operationId: update_3
      parameters:
        - name: answerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAnswerResponse'
    delete:
      tags:
        - answer-controller
      operationId: deleteAnswer
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /users:
    get:
      tags:
        - user-controller
      operationId: getUsers
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListUserResponse'
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUser'
  /therapist:
    get:
      tags:
        - therapist-controller
      operationId: getAll
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListTherapistResponse'
    post:
      tags:
        - therapist-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TherapistRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseTherapistResponse'
  /role:
    get:
      tags:
        - role-controller
      operationId: getAll_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListRoleResponse'
    post:
      tags:
        - role-controller
      operationId: create_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseRoleResponse'
  /quiz:
    get:
      tags:
        - quiz-controller
      operationId: getAllQuiz
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListQuizResponse'
    post:
      tags:
        - quiz-controller
      operationId: createQuiz
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuizResponse'
  /question:
    get:
      tags:
        - question-controller
      operationId: getAll_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListQuestionResponse'
    post:
      tags:
        - question-controller
      operationId: createQuestion
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseQuestionResponse'
  /auth/refresh:
    post:
      tags:
        - authentication-controller
      operationId: refresh
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAuthenticationResponse'
  /auth/logout:
    post:
      tags:
        - authentication-controller
      operationId: logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutRequest'
        required: true
      responses:
        '200':
          description: OK
  /auth/introspect:
    post:
      tags:
        - authentication-controller
      operationId: introspect
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntrospectRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseIntrospectResponse'
  /auth/authenticate:
    post:
      tags:
        - authentication-controller
      operationId: authenticate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAuthenticationResponse'
  /answer:
    get:
      tags:
        - answer-controller
      operationId: getAll_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListAnswerResponse'
    post:
      tags:
        - answer-controller
      operationId: createAnswer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAnswerResponse'
  /users/getMyInfo:
    get:
      tags:
        - user-controller
      operationId: getMyInfo
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseUserResponse'
  /therapist/{therapistId}:
    get:
      tags:
        - therapist-controller
      operationId: getById_2
      parameters:
        - name: therapistId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseTherapistResponse'
  /question/{quizId}/Quizzes:
    get:
      tags:
        - question-controller
      operationId: getByQuizId
      parameters:
        - name: quizId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListQuestionResponse'
  /answer/{questionId}/question:
    get:
      tags:
        - answer-controller
      operationId: getByQuestionId
      parameters:
        - name: questionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseListAnswerResponse'
  /role/{role}:
    delete:
      tags:
        - role-controller
      operationId: delete_2
      parameters:
        - name: role
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseVoid'
components:
  schemas:
    UserUpdateRequest:
      type: object
      properties:
        password:
          type: string
        fullName:
          type: string
        dob:
          type: string
          format: date
        phone:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
          uniqueItems: true
    ApiResponseUserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/UserResponse'
    Role:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    UserResponse:
      type: object
      properties:
        username:
          type: string
        fullName:
          type: string
        dob:
          type: string
          format: date
        email:
          type: string
        phone:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          uniqueItems: true
    TherapistUpdateRequest:
      type: object
      properties:
        phone:
          type: string
          pattern: ^\d{10}$
        experienceYears:
          type: integer
          format: int32
        bio:
          type: string
    ApiResponseTherapistResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/TherapistResponse'
    TherapistResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        fullName:
          type: string
        email:
          type: string
        experienceYears:
          type: integer
          format: int32
        bio:
          type: string
        dob:
          type: string
          format: date
        phone:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          uniqueItems: true
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: object
    UpdateRoleRequest:
      type: object
      properties:
        description:
          type: string
    ApiResponseRoleResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/RoleResponse'
    RoleResponse:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    QuizRequest:
      type: object
      properties:
        serviceCategoryId:
          type: integer
          format: int32
        name:
          type: string
      required:
        - name
        - serviceCategoryId
    Answer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          $ref: '#/components/schemas/Question'
        text:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        point:
          type: integer
          format: int32
    ApiResponseQuizResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/QuizResponse'
    Question:
      type: object
      properties:
        id:
          type: integer
          format: int32
        quiz:
          $ref: '#/components/schemas/Quiz'
        text:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    Quiz:
      type: object
      properties:
        id:
          type: integer
          format: int32
        serviceCategoryId:
          type: integer
          format: int32
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    QuizResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        serviceCategoryId:
          type: integer
          format: int32
        name:
          type: string
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    QuestionRequest:
      type: object
      properties:
        quizId:
          type: integer
          format: int32
        text:
          type: string
        type:
          type: string
    ApiResponseQuestionResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/QuestionResponse'
    QuestionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        quiz:
          $ref: '#/components/schemas/Quiz'
        text:
          type: string
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    AnswerRequest:
      type: object
      properties:
        questionId:
          type: integer
          format: int32
        text:
          type: string
        point:
          type: integer
          format: int32
      required:
        - point
        - questionId
        - text
    AnswerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          $ref: '#/components/schemas/Question'
        text:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        point:
          type: integer
          format: int32
    ApiResponseAnswerResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/AnswerResponse'
    UserRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 2147483647
          minLength: 5
        password:
          type: string
          maxLength: 2147483647
          minLength: 8
        fullName:
          type: string
        email:
          type: string
        phone:
          type: string
          pattern: ^\d{10}$
        dob:
          type: string
          format: date
      required:
        - email
        - fullName
    ApiResponseUser:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/User'
    Therapist:
      type: object
      properties:
        id:
          type: string
        user:
          $ref: '#/components/schemas/User'
        experienceYears:
          type: integer
          format: int32
        rating:
          type: number
          format: float
        bio:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        fullName:
          type: string
        email:
          type: string
        password:
          type: string
        thirdPartyProvider:
          type: string
        thirdPartyId:
          type: string
        phone:
          type: string
        dob:
          type: string
          format: date
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'
          uniqueItems: true
        therapist:
          $ref: '#/components/schemas/Therapist'
        active:
          type: boolean
    TherapistRequest:
      type: object
      properties:
        username:
          type: string
          maxLength: 2147483647
          minLength: 5
        password:
          type: string
          maxLength: 2147483647
          minLength: 8
        fullName:
          type: string
        email:
          type: string
        phone:
          type: string
          pattern: ^\d{10}$
        dob:
          type: string
          format: date
        experienceYears:
          type: integer
          format: int32
        bio:
          type: string
      required:
        - email
        - experienceYears
        - fullName
    RoleRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    RefreshRequest:
      type: object
      properties:
        token:
          type: string
    ApiResponseAuthenticationResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/AuthenticationResponse'
    AuthenticationResponse:
      type: object
      properties:
        token:
          type: string
    LogoutRequest:
      type: object
      properties:
        token:
          type: string
    IntrospectRequest:
      type: object
      properties:
        token:
          type: string
    ApiResponseIntrospectResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          $ref: '#/components/schemas/IntrospectResponse'
    IntrospectResponse:
      type: object
      properties:
        valid:
          type: boolean
    AuthenticationRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ApiResponseListUserResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    ApiResponseListTherapistResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/TherapistResponse'
    ApiResponseListRoleResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/RoleResponse'
    ApiResponseListQuizResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/QuizResponse'
    ApiResponseListQuestionResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/QuestionResponse'
    ApiResponseListAnswerResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/AnswerResponse'
    ApiResponseVoid:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        result:
          type: object
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
